# Gemini AI Configuration
# Centralized configuration for all AI prompts and model settings

# Model Configuration
model: "models/gemini-2.0-flash"

# Generation Configuration
generation_config:
  temperature: 0.7        # Controls randomness (0.0 = deterministic, 1.0 = creative)
  top_p: 0.9              # Nucleus sampling threshold
  top_k: 40               # Top-k sampling parameter
  max_output_tokens: 2048 # Maximum length of generated response

# Unified TODO Extraction Configuration
# Used by Email, Jira, and Slack connectors to extract actionable tasks
todo_extraction:
  enabled: true
  
  # AI Model settings (shared across all sources)
  model: "models/gemini-2.0-flash"
  temperature: 0.3  # Lower temperature for more consistent extraction
  max_output_tokens: 2000
  
  # Detection settings (shared)
  detection:
    confidence_threshold: 0.6
    max_todos_per_item: 3
  
  # Source-specific settings
  sources:
    email:
      enabled: true
      priority_weight: 1.2  # Emails get 20% urgency boost
      
    jira:
      enabled: true
      priority_weight: 1.0
      analyze_assigned_issues: true
      analyze_comments: true  # Extract from @mentions in comments
      analyze_descriptions: true
      
    slack:
      enabled: true
      priority_weight: 0.9  # Slack is more casual
      analyze_direct_messages: true
      analyze_mentions: true
      analyze_thread_replies: true
  
  # Unified system prompt (works for all sources)
  prompts:
    system_prompt: |
      You are an expert at analyzing professional communications (emails, Jira issues, Slack messages) 
      and extracting actionable TODO items using natural language understanding.
      
      Intelligent criteria for identifying tasks:
      
      1. **Direct Instructions & Explicit Requests**: 
         - Direct assignments, @mentions, clear commands
         - Questions requiring response
      
      2. **Implicit Actions & Strong Verbs**:
         - Action verbs: review, approve, finalize, send, update, test, document
         - "We need to...", "Let's...", "Please..."
      
      3. **Context from Key People**:
         - Prioritize managers, team leads, stakeholders
         - Direct 1-on-1 communications
      
      4. **Deadlines and Urgency**:
         - Due dates, sprint deadlines, release dates
         - "ASAP", "urgent", "by EOD", "before meeting"
      
      5. **Decision & Approval Requests**:
         - "needs your approval", "please review", "waiting on you"
      
      Output format: JSON array with description, urgency, deadline, context, confidence
    
    # Email-specific extraction prompt
    email_prompt: |
      Analyze this email for actionable TODOs.
      
      From: {email_from}
      Subject: {email_subject}
      Date: {email_date}
      
      {email_body}
      
      Extract actionable TODOs with description, urgency (critical/high/medium/low), 
      deadline (YYYY-MM-DD or null), context, and confidence (0.0-1.0).
      
      Return JSON array or [] if no TODOs.
    
    # Jira-specific extraction prompt
    jira_prompt: |
      Analyze this Jira issue for actionable TODOs for the assignee/mentioned user.
      
      Issue: {issue_key} - {issue_summary}
      Status: {issue_status}
      Assigned: {assignee}
      Priority: {priority}
      
      Description:
      {description}
      
      Recent Comments:
      {comments}
      
      Focus on:
      - Action items in comments (especially @mentions)
      - Blockers needing resolution
      - Review/approval requests
      - Testing or documentation needs
      - Specific tasks within the issue
      
      Extract actionable TODOs with description, urgency, deadline, context, and confidence.
      Return JSON array or [] if no TODOs.
    
    # Slack-specific extraction prompt  
    slack_prompt: |
      Analyze this Slack message/thread for actionable TODOs for the user.
      
      Channel: {channel}
      From: {sender}
      Date: {date}
      
      Message:
      {message}
      
      Thread Context:
      {thread_context}
      
      Focus on:
      - Direct questions or requests to the user
      - @mentions asking for action
      - Commitments made by the user
      - Follow-up requests
      - Shared team tasks
      
      Extract actionable TODOs with description, urgency, deadline, context, and confidence.
      Return JSON array or [] if no TODOs.

# Email Workflow Prompts
# These prompts are used by the daily team report workflow
prompts:
  # Per-channel Slack analysis
  slack_channel_analysis: |
    Analyze the last {activity_days} days of activity in the Slack channel "{channel_name}" for the {team} team.
    
    Recent Messages ({message_count} messages):
    {messages}
    
    Please provide a concise summary (2-3 sentences) covering:
    1. Main topics and discussions
    2. Key decisions or updates
    3. Any blockers or issues
    4. Team collaboration patterns
    
    Focus on actionable insights and important developments.
  
  # Overall team executive summary
  team_executive_summary: |
    Provide an executive summary for the {team} team based on the last {activity_days} days of activity:
    
    Team Activity Overview:
    - {total_messages} messages across {channel_count} channels
    - {ticket_count} active Jira tickets (analyzing most recent {max_tickets})
    
    Channel Summaries:
    {channel_summaries}
    
    Please provide a high-level summary (2-3 sentences) covering:
    1. Overall team productivity and focus areas
    2. Key accomplishments or milestones
    3. Any concerns or areas needing attention
    
    Keep it concise and executive-friendly.
  
  # Paul's action items from team data
  paul_todo_items: |
    Based on the following Slack conversations and Jira tickets that involve Paul Caramuto, generate a list of suggested action items that require Paul's attention.
    
    {slack_summary}
    {jira_summary}
    
    Please provide actionable items for each activity Paul is involved in.
    Keep each item concise but specific in this format:
    - Slack channel <channel_name> (YYYY-MM-DD): <action item>
    - Jira ticket <ticket_key>: <action item>
    
    For Slack messages, include the date in parenthesis (use the date provided in the message data).
    Include both items where others are asking Paul to do something, and items where Paul mentioned he would do something.
  
  # SP Engineer action items - what they're working on and how to support them
  sp_engineer_summary: |
    Analyze the following Jira tickets for {engineer_name} and provide a brief summary of what they're working on and how they could be supported.
    
    Tickets ({ticket_count} in active sprint):
    {ticket_list}
    
    Please provide:
    1. Brief summary of their current focus (1-2 sentences)
    2. Potential areas where support might be helpful (1-2 actionable items)
    
    Keep it concise and actionable. Focus on practical ways to help them succeed.
  
  # Jira tickets analysis
  jira_analysis: |
    Analyze the following Jira tickets for the {team} team and provide insights:
    
    Jira Tickets ({ticket_count} tickets analyzed):
    {ticket_summaries}
    
    Please provide a concise analysis (2-3 sentences) covering:
    1. Overall ticket status and progress patterns
    2. Key blockers or issues that need attention
    3. Team workload distribution and priorities
    
    Focus on actionable insights for project management.
  
  # Consolidated Paul TODO summary across all teams
  paul_consolidated_todo: |
    Review all TODO items for Paul Caramuto across {team_count} teams and provide a prioritized, consolidated action list.
    
    Team TODO Summaries:
    {team_todos}
    
    Please provide:
    1. A consolidated, de-duplicated list of 5-7 highest priority action items
    2. Group similar items together
    3. Use format: [PRIORITY] Action item - (Related teams: X, Y)
    4. Priorities: HIGH, MEDIUM, LOW
    5. Focus on items requiring immediate attention
    
    Keep it concise and actionable.
