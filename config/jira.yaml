# Simplified Jira MCP Configuration
# This replaces the complex 266-line config with a clean, minimal structure

teams:
  toolchain:
    name: "ToolChain Team"
    project: "Automotive Feature Teams"
    assigned_team: "rhivos-pdr-auto-toolchain"  # Valid AssignedTeam value
    members:
      - "Sameera Kalgudi"
      - "Ozan Unsal"
      - "Marcel Banas"

  assessment:
    name: "Assessment Team"
    project: "Automotive Feature Teams"
    assigned_team: "rhivos-fusa-assessment"  # Valid AssignedTeam value
    members:
      - "Joe Simmons-Talbott"

  foa:
    name: "FoA Team"
    project: "Automotive Feature Teams"
    assigned_team: "rhivos-fusa-foa"  # Valid AssignedTeam value
    members:
      - "Nisha Saini"
      - "Ryan Smith"

  boa:
    name: "BoA Team"
    project: "Automotive Feature Teams"
    assigned_team: "rhivos-pdr-base-os-automotive"  # Valid AssignedTeam value
    members:
      - "Jan Onderka"

organizations:
  SP:
    - "Sameera Kalgudi"
    - "Ozan Unsal"
    - "Marcel Banas"
    - "Nisha Saini"
    - "Ryan Smith"
    - "Jan Onderka"
    - "Joe Simmons-Talbott"

# Team aliases for better user experience
team_aliases:
  # FoA Team aliases
  "FoA": "foa"
  "FOA": "foa"
  "foa": "foa"
  "fusa-foa": "foa"
  "rhivos-fusa-foa": "foa"
  
  # ToolChain Team aliases
  "ToolChain": "toolchain"
  "toolchain": "toolchain"
  "Toolchain": "toolchain"
  "pdr-auto-toolchain": "toolchain"
  "rhivos-pdr-auto-toolchain": "toolchain"
  
  # Assessment Team aliases
  "Assessment": "assessment"
  "assessment": "assessment"
  "fusa-assessment": "assessment"
  "rhivos-fusa-assessment": "assessment"
  
  # BoA Team aliases
  "BoA": "boa"
  "BOA": "boa"
  "boa": "boa"
  "pdr-base-os-automotive": "boa"
  "rhivos-pdr-base-os-automotive": "boa"

# Organization aliases for better user experience
organization_aliases:
  "SP": "SP"
  "sp": "SP"
  "Software Production": "SP"
  "software production": "SP"
  "SoftwareProduction": "SP"
  "softwareproduction": "SP"

# User display names mapping: Engineer Name -> Jira Username
user_display_names:
  "Sameera Kalgudi": "rhn-support-skalgudi"
  "Ozan Unsal": "rhn-support-ounsal"
  "Marcel Banas": "mabanas@redhat.com"
  "Nisha Saini": "rhn-support-nsaini"
  "Ryan Smith": "rsmit106"
  "Jan Onderka": "jonderka@redhat.com"
  "Joe Simmons-Talbott": "rhn-support-josimmon"

# Query Filters Configuration for Email Workflow
# Controls which tickets are included in daily team reports
query_filters:
  # Status filter for team tickets
  # List statuses to include in reports
  statuses:
    - "To Do"
    - "In Progress"
    - "Review"
  #  - "Done"
  #  - "Blocked"
  #  - "Code Review"
  
  # Sort by sprint, then priority
  order_by: "priority DESC, updated DESC"
  
  # Only show tickets in active sprints
  additional_jql: 'AND sprint in openSprints()'
  
  # Optional: Additional JQL filter fragments
  # additional_jql: 'AND priority in (High, Highest)'
  # additional_jql: 'AND labels in (critical, urgent)'
  # additional_jql: 'AND sprint = "Sprint 24"'

# Query Filters Configuration for MCP Servers
# Controls default filtering behavior for MCP tool queries
mcp_query_filters:
  # Default status filter for MCP tools
  # If empty/commented, uses MCP tool's hardcoded defaults
  # default_status: "In Progress"
  
  # List of statuses to include when using "All" filters
  # Used by tools like dump_jira_team_data with "All In Progress" filter
  # When set, this becomes the default status filter for MCP tools
  # IMPORTANT: Use Jira statusCategory values: "To Do", "In Progress", or "Done"
  # Recommended: Include only active work statuses to avoid slow queries
  all_statuses:
   - "To Do"
   - "In Progress"
   - "Review"
  #  - "Done"  # Uncomment to include completed tickets
  
  # Default sort order for MCP queries
  order_by: "updated DESC"
  
  # Maximum number of results to return from Jira
  # Important: Set high enough to capture all tickets when filtering by latest sprint
  # Without status filters, you might have 200+ tickets
  max_results: 200
  
  # Additional JQL filter to apply to all MCP queries
  # Leave empty for no additional filtering
  additional_jql: 'AND sprint in openSprints()'
  
  # Filter to only the latest sprint when multiple open sprints exist
  # When true, post-processes results to keep only tickets from the highest sprint number
  filter_to_latest_sprint: true
  
  # Optional: Uncomment to filter by sprint
  # additional_jql: 'AND sprint in openSprints()'
  
  # Optional: Uncomment to filter by priority
  # additional_jql: 'AND priority in (High, Highest)'