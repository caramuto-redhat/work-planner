stages:
  - build
  - test
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"

build_container:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - echo "Building Work Planner container with GitLab secrets..."
    - docker build --build-arg JIRA_URL="$JIRA_URL" --build-arg JIRA_API_TOKEN="$JIRA_API_TOKEN" --build-arg SLACK_XOXC_TOKEN="$SLACK_XOXC_TOKEN" --build-arg SLACK_XOXD_TOKEN="$SLACK_XOXD_TOKEN" --build-arg LOGS_CHANNEL_ID="$LOGS_CHANNEL_ID" -t $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:latest
    - echo "Container built and pushed to GitLab Container Registry"
  only:
    - main
    - tags

test_container:
  stage: test
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - echo "Testing Work Planner container..."
    - docker run --rm $CI_REGISTRY_IMAGE:latest python -c "print('Container test successful')"
    - echo "Container test completed"
  only:
    - main
    - tags

deploy_notification:
  stage: deploy
  image: alpine:latest
  script:
    - echo "Work Planner MCP Server deployed!"
    - echo "Container ready for use"
  only:
    - main
    - tags
  when: manual